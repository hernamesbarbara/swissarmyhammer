{% partial %}

## Documentation

- Documentation should be evergreen and describe the code as it is, not how it was.
- Make documentation comments clear, concise, and informative. Focus on brevity.
- Use examples in documentation comments to illustrate usage.
- Verify that any include directives are correct, and resolve relative to their containing file.
- Cross reference all types as links.
- Make sure to use the correct markdown syntax for the source file language.
- Create documentation comments inline on code on all symbols that are public or otherwise visible outside the source file.
- Create markdown documentation in the ./doc folder to describe high level concepts and examples.
- Always create an excellent README for the repository
  - Tell the user what problem this solve
  - Tell the user how the problem is solved
- Always document public visible symbols in code.
- Always create an excellent introduction for the API documentation
- Use a tool to load memos into the context, these have important repo specific information

## Documentation Outline

These are the required sections in the documentation in ./doc

### Architecture Documentation

#### System Overview

- High-level architecture diagrams
- Component relationships
- Data flow patterns
- Integration points

#### Core Components

- Purpose and responsibilities
- Design decisions and rationales
- Dependencies and interfaces
- Configuration options

### User Documentation

#### Getting Started

- Installation requirements
- Quick start guide
- Basic configuration
- Common use cases

#### Features and Functionality

- Detailed feature descriptions
- Usage examples
- Best practices
- Troubleshooting guides

## Documentation Standards

### Structure and Format

- Consistent heading hierarchy
- Clear section organization
- Cross-references and links
- Table of contents

### Content Quality

- Clear explanations
- Practical examples
- Up-to-date information
- Appropriate detail level

## Language Specifics

### Rust

Use [rustdoc](https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html) for in source code documentation.

Use [mdbook](https://rust-lang.github.io/mdBook/) for project documentation.

Use [rust lang](https://doc.rust-lang.org/book/) documentation for inspiration.

Put the github pages link in the first few lines of the README and call attention to it with emoji.

### Dart

Use [dart doc](https://dart.dev/tools/dart-doc).

Use [go_router](https://pub.dev/documentation/go_router/latest/) documentation for inspiration.

Put the storybook link in the first few lines of the README and call attention to it with emoji.
