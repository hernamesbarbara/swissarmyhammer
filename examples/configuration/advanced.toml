# SwissArmyHammer Advanced Configuration Example (TOML)
# This demonstrates advanced features including environment variable substitution,
# conditional settings, and complex data structures

# Application with environment-aware settings
[app]
name = "${APP_NAME:-SwissArmyHammer}"
version = "${BUILD_VERSION:-dev}"
environment = "${ENVIRONMENT:-development}"
debug = "${DEBUG:-true}"
log_level = "${LOG_LEVEL:-debug}"

# Build information from CI/CD
[build]
commit_hash = "${GIT_COMMIT:-unknown}"
build_number = "${BUILD_NUMBER:-local}"
build_timestamp = "${BUILD_TIMESTAMP:-unknown}"
branch = "${GIT_BRANCH:-main}"
tag = "${GIT_TAG:-latest}"

# Multi-environment database configuration
[database]
# Primary database with full environment substitution
primary_url = "${DATABASE_URL:-postgresql://${DB_USER:-admin}:${DB_PASS:-secret}@${DB_HOST:-localhost}:${DB_PORT:-5432}/${DB_NAME:-myapp}}"
ssl_mode = "${DB_SSL_MODE:-prefer}"
pool_min = "${DB_POOL_MIN:-5}"
pool_max = "${DB_POOL_MAX:-20}"
statement_timeout = "${DB_STATEMENT_TIMEOUT:-30000}"

# Read replica configuration  
[database.replica]
enabled = "${READ_REPLICA_ENABLED:-false}"
url = "${READ_REPLICA_URL:-${DATABASE_URL}}"
lag_tolerance = "${READ_REPLICA_LAG_MS:-1000}"

# Multiple Redis instances
[redis]
# Primary Redis for caching
cache_url = "${REDIS_CACHE_URL:-redis://${REDIS_HOST:-localhost}:${REDIS_PORT:-6379}/${REDIS_CACHE_DB:-0}}"
# Redis for sessions  
session_url = "${REDIS_SESSION_URL:-redis://${REDIS_HOST:-localhost}:${REDIS_PORT:-6379}/${REDIS_SESSION_DB:-1}}"
# Redis for pub/sub
pubsub_url = "${REDIS_PUBSUB_URL:-redis://${REDIS_HOST:-localhost}:${REDIS_PORT:-6379}/${REDIS_PUBSUB_DB:-2}}"

# Complex authentication with multiple providers
[auth]
secret_key = "${AUTH_SECRET_KEY:-${JWT_SECRET:-change-me-in-production}}"
token_expiry = "${TOKEN_EXPIRY_SECONDS:-3600}"
refresh_token_expiry = "${REFRESH_TOKEN_EXPIRY_SECONDS:-604800}"

# OAuth configuration with provider-specific settings
[auth.oauth.google]
enabled = "${OAUTH_GOOGLE_ENABLED:-false}"
client_id = "${GOOGLE_OAUTH_CLIENT_ID}"
client_secret = "${GOOGLE_OAUTH_CLIENT_SECRET}"
scopes = ["openid", "email", "profile"]
redirect_uri = "${BASE_URL:-http://localhost:3000}/auth/google/callback"

[auth.oauth.github]
enabled = "${OAUTH_GITHUB_ENABLED:-false}" 
client_id = "${GITHUB_OAUTH_CLIENT_ID}"
client_secret = "${GITHUB_OAUTH_CLIENT_SECRET}"
scopes = ["user:email", "read:user"]
redirect_uri = "${BASE_URL:-http://localhost:3000}/auth/github/callback"

[auth.oauth.microsoft]
enabled = "${OAUTH_MICROSOFT_ENABLED:-false}"
client_id = "${MICROSOFT_OAUTH_CLIENT_ID}"
client_secret = "${MICROSOFT_OAUTH_CLIENT_SECRET}"
tenant_id = "${MICROSOFT_TENANT_ID:-common}"
redirect_uri = "${BASE_URL:-http://localhost:3000}/auth/microsoft/callback"

# Email with provider fallbacks
[email]
primary_provider = "${EMAIL_PRIMARY_PROVIDER:-smtp}"

# SMTP configuration
[email.smtp]
host = "${SMTP_HOST:-localhost}"
port = "${SMTP_PORT:-587}"
username = "${SMTP_USERNAME}"
password = "${SMTP_PASSWORD}"
encryption = "${SMTP_ENCRYPTION:-tls}"

# SendGrid configuration
[email.sendgrid]
api_key = "${SENDGRID_API_KEY}"
from_email = "${SENDGRID_FROM_EMAIL:-noreply@example.com}"
from_name = "${SENDGRID_FROM_NAME:-${APP_NAME:-MyApp}}"

# AWS SES configuration
[email.aws_ses]
region = "${AWS_REGION:-us-east-1}"
access_key_id = "${AWS_ACCESS_KEY_ID}"
secret_access_key = "${AWS_SECRET_ACCESS_KEY}"
from_email = "${SES_FROM_EMAIL:-noreply@example.com}"

# Monitoring and observability stack
[monitoring]
enabled = "${MONITORING_ENABLED:-true}"

# Application Performance Monitoring
[monitoring.apm]
provider = "${APM_PROVIDER:-jaeger}"
jaeger_endpoint = "${JAEGER_ENDPOINT:-http://localhost:14268/api/traces}"
sample_rate = "${APM_SAMPLE_RATE:-0.1}"

# Error tracking
[monitoring.error_tracking]
provider = "${ERROR_TRACKING_PROVIDER:-sentry}"
sentry_dsn = "${SENTRY_DSN}"
environment = "${SENTRY_ENVIRONMENT:-${ENVIRONMENT:-development}}"
release = "${SENTRY_RELEASE:-${BUILD_VERSION:-dev}}"

# Metrics collection
[monitoring.metrics]
enabled = "${METRICS_ENABLED:-true}"
prometheus_endpoint = "${PROMETHEUS_ENDPOINT:-http://localhost:9090}"
custom_metrics = "${CUSTOM_METRICS_ENABLED:-true}"

# Log aggregation
[monitoring.logging]
level = "${LOG_LEVEL:-info}"
format = "${LOG_FORMAT:-json}"
output = "${LOG_OUTPUT:-stdout}"
elasticsearch_url = "${ELASTICSEARCH_URL}"
logstash_host = "${LOGSTASH_HOST}"

# Feature flags with A/B testing
[features]
# Core features
api_v2 = "${FEATURE_API_V2:-false}"
new_ui = "${FEATURE_NEW_UI:-false}"
beta_dashboard = "${FEATURE_BETA_DASHBOARD:-false}"

# A/B test configurations
[features.ab_tests]
enabled = "${AB_TESTING_ENABLED:-false}"
new_checkout_flow = "${AB_TEST_CHECKOUT:-false}"
recommended_products = "${AB_TEST_RECOMMENDATIONS:-false}"

# Advanced caching strategy
[cache]
# Multi-tier caching
[cache.memory]
enabled = "${MEMORY_CACHE_ENABLED:-true}"
max_size_mb = "${MEMORY_CACHE_SIZE_MB:-100}"
ttl_seconds = "${MEMORY_CACHE_TTL:-300}"

[cache.redis] 
enabled = "${REDIS_CACHE_ENABLED:-true}"
url = "${REDIS_CACHE_URL}"
ttl_seconds = "${REDIS_CACHE_TTL:-3600}"
compression = "${REDIS_CACHE_COMPRESSION:-true}"

[cache.cdn]
enabled = "${CDN_ENABLED:-false}"
provider = "${CDN_PROVIDER:-cloudflare}"
base_url = "${CDN_BASE_URL}"
cache_control = "${CDN_CACHE_CONTROL:-public, max-age=31536000}"

# Security configuration
[security]
cors_origins = "${CORS_ORIGINS:-http://localhost:3000,http://localhost:5173}"
csrf_protection = "${CSRF_PROTECTION_ENABLED:-true}"
rate_limiting = "${RATE_LIMITING_ENABLED:-true}"
ssl_redirect = "${SSL_REDIRECT_ENABLED:-false}"

# Content Security Policy
[security.csp]
enabled = "${CSP_ENABLED:-true}"
default_src = "${CSP_DEFAULT_SRC:-'self'}"
script_src = "${CSP_SCRIPT_SRC:-'self' 'unsafe-inline' 'unsafe-eval'}"
style_src = "${CSP_STYLE_SRC:-'self' 'unsafe-inline'}"
img_src = "${CSP_IMG_SRC:-'self' data: https:}"

# Template variables with environment-aware defaults
[variables]
app_title = "${APP_TITLE:-${APP_NAME:-SwissArmyHammer}}"
meta_description = "${META_DESCRIPTION:-A powerful application built with SwissArmyHammer}"
support_email = "${SUPPORT_EMAIL:-support@example.com}"
company_name = "${COMPANY_NAME:-Your Company}"
copyright_year = "${COPYRIGHT_YEAR:-2024}"
privacy_url = "${PRIVACY_URL:-/privacy}"
terms_url = "${TERMS_URL:-/terms}"

# Environment-specific overrides
[environments.development]
debug = true
log_level = "debug"
hot_reload = true
minify_assets = false
cache_templates = false

[environments.staging]
debug = false
log_level = "info"
hot_reload = false
minify_assets = true
cache_templates = true

[environments.production]
debug = false
log_level = "warn"
hot_reload = false
minify_assets = true  
cache_templates = true
ssl_redirect = true